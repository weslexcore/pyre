---
import experiences from '../lib/experiences';
import { Image } from 'astro:assets';
import { withBase } from '../lib/paths';
---

<section aria-labelledby="experiences-heading" class="relative text-[var(--foreground)]">
  <!-- Background video wrapper -->
  <div class="absolute inset-0 z-[-10] overflow-hidden pointer-events-none">
    <video
      id="experiences-bg-video"
      class="w-full h-full object-cover opacity-90"
      src={withBase('/videos/running_water.MOV')}
      autoplay
      muted
      loop
      playsinline
      preload="metadata"
      aria-hidden="true"
    ></video>
  </div>

  <div class="mx-auto w-full px-4 sm:max-w-screen-sm md:max-w-screen-md lg:max-w-screen-lg xl:max-w-screen-xl py-10 sm:py-12">
    <h2 id="experiences-heading" class="font-primary-semibold tracking-[-0.02em] uppercase text-[clamp(3.5rem,5vw,4rem)] leading-[1.1] mb-6 sm:mb-8">{experiences.elements.title}</h2>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8">
      {experiences.elements.items.map((experience) => (
        <article class="rounded-md border border-[var(--border)] bg-[var(--pyre-creme)] p-6 sm:p-8" aria-labelledby={`experience-${experience.title.toLowerCase()}-title`}>
          <div class="flex flex-col items-start gap-4">
            <div class="bg-[var(--pyre-blue)] rounded-full flex items-center justify-center w-20 h-20 sm:w-24 sm:h-24">
              <Image
                src={withBase(experience.icon?.src ?? '')}
                alt={experience.icon?.alt}
                width="120"
                height="120"
                loading="lazy"
                decoding="async"
                class="w-full h-full object-contain"
              />
            </div>

            <h3 id={`experience-${experience.title.toLowerCase()}-title`} class="font-primary-semibold tracking-[-0.02em] uppercase text-[clamp(1.25rem,4vw,1.618rem)]">{experience.title}</h3>

            <p class="text-base leading-relaxed">{experience.description}</p>

            <ul class="list-disc pl-6 space-y-2 max-w-[75ch]">
              {experience.bullets.map((bullet) => (
                <li>{bullet}</li>
              ))}
            </ul>
            {/* <div class="flex">
              <div class="flex-1"></div>
              <a
                href={experience.link?.href}
                class="font-primary-semibold tracking-[-0.02em] uppercase text-[var(--pyre-red)] text-center"
              >
                {experience.linkText} &gt;
              </a>
            </div> */}
          </div>
        </article>
      ))}
    </div>
  </div>
  <script>
    const video = document.getElementById('experiences-bg-video');
    if (video instanceof HTMLVideoElement) {

      console.log('video', video);
      const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');

      const applyPlaybackPrefs = () => {
        try {
          video.playbackRate = 0.1;
        } catch {}
        if (mediaQuery.matches) {
          try { video.pause(); } catch {}
        }
      };

      const onLoaded = () => {
        applyPlaybackPrefs();
      };

      if (video.readyState >= 1) {
        onLoaded();
      } else {
        video.addEventListener('loadedmetadata', onLoaded, { once: true });
      }

      // Optional: pause/play based on visibility to save resources
      try {
        const observer = new IntersectionObserver((entries) => {
          for (const entry of entries) {
            if (entry.isIntersecting && !mediaQuery.matches) {
              video.play().catch(() => {});
            } else {
              video.pause();
            }
          }
        }, { threshold: 0.1 });
        observer.observe(video);
      } catch {}
    }
  </script>
</section>


