---
import breakSection from '../lib/breakSection';
import { Image } from 'astro:assets';
import backgroundImage from '@/assets/images/giant_clouds.jpeg';

---

<!-- <section aria-labelledby="break-heading" class="relative text-[var(--pyre-creme)] "> -->
<section
  aria-labelledby="break-heading"
  class="relative text-[var(--pyre-creme)] pt-10 pb-10 md:pt-20 md:pb-20"
>
  <!-- Background image layer with subtle opacity -->
  <div class="absolute inset-0 z-[-1] overflow-hidden" aria-hidden="true">
    <Image
      src={backgroundImage}
      alt={"Sky full of clouds"}
      width="1600"
      height="1067"
      loading="lazy"
      decoding="async"
      class="h-full w-full object-cover object-center"
    />
    <!-- Contrast overlay -->
    <div class="absolute inset-0 bg-[rgba(0,0,0,0.25)]"></div>
  </div>

  <div class="mx-auto w-full px-4 sm:max-w-screen-sm md:max-w-screen-md lg:max-w-screen-lg xl:max-w-screen-xl py-16 sm:py-24">
    <div class="flex flex-col items-center text-center">
      <h2
        id="break-heading"
        class="font-primary-semibold text-[var(--pyre-creme)] tracking-[-0.02em] uppercase text-[clamp(2rem,6vw,4.618rem)] leading-[1.1] max-w-[75ch]"
      >
        <span class="font-logo text-[calc(1em+.5rem)]">PYRE</span>
        {breakSection.elements.headingTop}
      </h2>
      <h2 class="font-primary-semibold text-[var(--pyre-creme)] tracking-[-0.02em] uppercase text-[clamp(2rem,6vw,4.618rem)] leading-[1.1] max-w-[75ch]">
        <span id="break-rotating-word" aria-live="polite" aria-atomic="true">{breakSection.elements.words[0]}</span>
      </h2>
    </div>
  </div>
  <script>
    const words = ['RECONNECT', 'BE PRESENT', 'CULTIVATE JOY','DISCONNECT', 'MAKE A FRIEND', 'BREATHE', 'HEAL'];
    const intervalMs = 2000;
    (function () {
        const rotatingSpan = document.getElementById('break-rotating-word');
        if (!(rotatingSpan instanceof HTMLElement)) return;

        // Add fade transition styles to the span
        rotatingSpan.style.transition = 'opacity 350ms cubic-bezier(0.4,0,0.2,1)';
        rotatingSpan.style.opacity = '1';

        const WORDS = words;
        const INTERVAL_MS = intervalMs;

        let currentIndex = 0;
        let timerId = null;
        const FADE_DURATION = 350; // ms, must match transition above

        // Helper to set word with fade out/in
        function fadeToWord(nextWord) {
          // Fade out
          rotatingSpan.style.opacity = '0';
          setTimeout(() => {
            rotatingSpan.textContent = nextWord;
            // Fade in
            rotatingSpan.style.opacity = '1';
          }, FADE_DURATION);
        }

        const updateWord = (fade = false) => {
          const next = WORDS[currentIndex] ?? '';
          if (fade) {
            fadeToWord(next);
          } else {
            rotatingSpan.textContent = next;
            rotatingSpan.style.opacity = '1';
          }
        };

        const start = () => {
          if (timerId !== null) return;
          timerId = window.setInterval(() => {
            // Fade out, then update, then fade in
            currentIndex = (currentIndex + 1) % WORDS.length;
            updateWord(true);
          }, INTERVAL_MS);
        };

        const stop = () => {
          if (timerId !== null) {
            clearInterval(timerId);
            timerId = null;
          }
        };

        // Initial render
        updateWord(false);

        if (WORDS.length > 1) {
          start();

          document.addEventListener('visibilitychange', () => {
            if (document.hidden) {
              stop();
            } else {
              start();
            }
          });
        }

        window.addEventListener('beforeunload', () => {
          stop();
        });
      })();
  </script>
</section>

