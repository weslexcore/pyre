---
const {
  variant = 'primary',
  size = 'md',
  href,
  type = 'submit',
  ariaLabel,
  class: extraClass = ''
} = Astro.props as {
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  type?: 'button' | 'submit';
  ariaLabel?: string;
  class?: string;
};

const baseClasses = [
  'inline-flex items-center justify-center select-none',
  'rounded-md font-semibold uppercase tracking-wide',
  'transition-colors duration-150',
  'disabled:opacity-50 disabled:cursor-not-allowed',
];

const sizeClasses =
  size === 'sm'
    ? 'px-3 py-2 text-sm'
    : size === 'lg'
    ? 'px-6 py-3 text-base'
    : 'px-4 py-2 text-base';

const variantClasses =
  variant === 'secondary'
    ? 'bg-[var(--secondary)] text-[var(--secondary-foreground)] hover:opacity-90'
    : variant === 'outline'
    ? 'border-2 border-[var(--primary-foreground)] text-[var(--primary-foreground)] bg-transparent hover:bg-[var(--accent)] hover:text-[var(--accent-foreground)]'
    : 'bg-[var(--primary)] text-[var(--primary-foreground)] hover:opacity-90';

const allClasses = [baseClasses.join(' '), sizeClasses, variantClasses, extraClass]
  .filter(Boolean)
  .join(' ');
---

{href ? (
  <a href={href} aria-label={ariaLabel} class={allClasses}>
    <slot />
  </a>
 ) : (
  <button type={type} aria-label={ariaLabel} class={allClasses}>
    <slot />
  </button>
 )}


